{"uid":"a9079496a72e310b","name":"Test go to my account orders history","fullName":"tests.test_my_account_page.TestMyAccountPage#test_go_to_my_account_orders_history","historyId":"b54671fc4e4b316d71518a663cba2947","time":{"start":1716044875398,"stop":1716044875398,"duration":0},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 403 Client Error: Forbidden for url: https://stellarburgers.nomoreparties.site/api/auth/register","statusTrace":"@pytest.fixture(scope=\"function\")\n    def random_user():\n        email = fake.email()\n        password = fake.password()\n        name = fake.name()\n    \n        register_url = \"https://stellarburgers.nomoreparties.site/api/auth/register\"\n        register_data = {\n            \"email\": email,\n            \"password\": password,\n            \"name\": name\n        }\n        response = requests.post(register_url, json=register_data)\n>       response.raise_for_status()\n\nconftest.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Response [403]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 403 Client Error: Forbidden for url: https://stellarburgers.nomoreparties.site/api/auth/register\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\requests\\models.py:1021: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1716044675371,"stop":1716044675403,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"driver","time":{"start":1716044875399,"stop":1716044880328,"duration":4929},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"random_user","time":{"start":1716044880328,"stop":1716044880842,"duration":514},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 403 Client Error: Forbidden for url: https://stellarburgers.nomoreparties.site/api/auth/register\n","statusTrace":"  File \"C:\\Users\\Leila Magomedova.WKST-QA-08\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pluggy\\_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Leila Magomedova.WKST-QA-08\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Leila Magomedova.WKST-QA-08\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\fixtures.py\", line 895, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Leila Magomedova.WKST-QA-08\\PycharmProjects\\Diploma\\Diplom_3\\conftest.py\", line 35, in random_user\n    response.raise_for_status()\n  File \"C:\\Users\\Leila Magomedova.WKST-QA-08\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\requests\\models.py\", line 1021, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0}],"afterStages":[{"name":"driver::0","time":{"start":1716044880862,"stop":1716044884371,"duration":3509},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_my_account_page"},{"name":"subSuite","value":"TestMyAccountPage"},{"name":"host","value":"WKST-QA-08"},{"name":"thread","value":"8852-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_my_account_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"driver","value":"'firefox'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a9079496a72e310b.json","parameterValues":["'firefox'"]}