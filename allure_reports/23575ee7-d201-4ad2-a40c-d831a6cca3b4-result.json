{"name": "Test go to my account profile", "status": "failed", "statusDetails": {"message": "AssertionError: Failed to register user. Response: {'success': False, 'message': 'User already exists'}\nassert 403 == 200\n +  where 403 = <Response [403]>.status_code", "trace": "@pytest.fixture(scope=\"function\")\n    def random_user():\n        email = fake.email()\n        password = fake.password()\n        name = fake.name()\n    \n    \n        register_url = \"https://stellarburgers.nomoreparties.site/api/auth/register\"\n        register_data = {\n            \"email\": email,\n            \"password\": password,\n            \"name\": name\n        }\n        response = requests.post(register_url, json=register_data)\n    \n>       assert response.status_code == 200, f\"Failed to register user. Response: {response.json()}\"\nE       AssertionError: Failed to register user. Response: {'success': False, 'message': 'User already exists'}\nE       assert 403 == 200\nE        +  where 403 = <Response [403]>.status_code\n\nconftest.py:34: AssertionError"}, "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1715533281015, "stop": 1715533281015, "uuid": "62d01dec-131c-424d-8296-a410867c5a98", "historyId": "6132e0666c3856095f0be494718445f8", "testCaseId": "5fd4fed6121bb9ce1c28fa8b9387ffd9", "fullName": "tests.test_my_account_page.TestMyAccountPage#test_go_to_my_account_profile", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_my_account_page"}, {"name": "subSuite", "value": "TestMyAccountPage"}, {"name": "host", "value": "WKST-QA-08"}, {"name": "thread", "value": "17424-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_my_account_page"}]}